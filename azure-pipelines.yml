variables:
  - group: semantic-release

trigger:
  - master

pr:
  - master

jobs:
  - job: commitlint
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: 10.x
        displayName: Use Node.js 10
      - script: npm ci
        displayName: Install Dependencies
      - script: ./node_modules/.bin/commitlint-azure-pipelines
        displayName: Lint Commits

  - job: test
    strategy:
      matrix:
        node_8:
          nodeVersion: 8.x
        node_10:
          nodeVersion: 10.x
        node_11:
          nodeVersion: 11.x
    pool:
      vmImage: 'win1803'
    resources:
      containers:
        - container: cosmos
          image: microsoft/azure-cosmosdb-emulator:2.2.1-2b4af9b3
          ports:
            - 8081:8081
          volumes:
            - '$(Build.BinariesDirectory)\cosmos-emulator:C:\CosmosDB.Emulator\bind-mount'
    services:
      cosmos: cosmos
    steps:
      - powershell: .\importcert.ps1
        workingDirectory: $(Build.BinariesDirectory)\cosmosdb-emulator
        displayName: Install Cosmos DB Emulator Cert
      - task: NodeTool@0
        inputs:
          versionSpec: $(nodeVersion)
        displayName: Use Node.js $(nodeVersion)
      - script: npm ci
        displayName: Install Dependencies
      - script: npm test
        env:
          COSMOS_ACCOUNT: https://localhost:8081/
          COSMOS_DATABASE: ci
          # Hardcoded emulator key. Not a real secret
          COSMOS_KEY: C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==
        displayName: Run Tests
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testRunner: JUnit
          testResultsFiles: junit.xml
      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: coverage\cobertura-coverage.xml
          reportDirectory: coverage

  # - job: publish
  #   dependsOn:
  #     - commitlint
  #     - test
  #   pool:
  #     vmImage: 'ubuntu-16.04'
  #   condition:
  #     and(succeeded(), in(variables['Build.Reason'], 'Manual', 'IndividualCI',
  #     'BatchedCI'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  #   steps:
  #     - task: NodeTool@0
  #       inputs:
  #         versionSpec: 10.x
  #       displayName: Use Node.js 10
  #     - script: npm ci
  #       displayName: Install Dependencies
  #     - script: npm run release
  #       env:
  #         GH_TOKEN: $(GH_TOKEN)
  #         NPM_TOKEN: $(NPM_TOKEN)
  #       displayName: Publish to NPM
